node ALU
  (in_x_0: bool;
  in_x_1: bool;
  in_x_2: bool;
  in_x_3: bool;
  in_x_4: bool;
  in_x_5: bool;
  in_x_6: bool;
  in_x_7: bool;
  in_x_8: bool;
  in_x_9: bool;
  in_x_10: bool;
  in_x_11: bool;
  in_x_12: bool;
  in_x_13: bool;
  in_x_14: bool;
  in_x_15: bool;
  in_y_0: bool;
  in_y_1: bool;
  in_y_2: bool;
  in_y_3: bool;
  in_y_4: bool;
  in_y_5: bool;
  in_y_6: bool;
  in_y_7: bool;
  in_y_8: bool;
  in_y_9: bool;
  in_y_10: bool;
  in_y_11: bool;
  in_y_12: bool;
  in_y_13: bool;
  in_y_14: bool;
  in_y_15: bool;
  zx: bool;
  nx: bool;
  zy: bool;
  ny: bool;
  f: bool;
  no: bool)
returns
  (out_0: bool;
  out_1: bool;
  out_2: bool;
  out_3: bool;
  out_4: bool;
  out_5: bool;
  out_6: bool;
  out_7: bool;
  out_8: bool;
  out_9: bool;
  out_10: bool;
  out_11: bool;
  out_12: bool;
  out_13: bool;
  out_14: bool;
  out_15: bool;
  zr: bool;
  ng: bool);

var
  V749_zeroedx_0: bool;
  V750_zeroedx_1: bool;
  V751_zeroedx_2: bool;
  V752_zeroedx_3: bool;
  V753_zeroedx_4: bool;
  V754_zeroedx_5: bool;
  V755_zeroedx_6: bool;
  V756_zeroedx_7: bool;
  V757_zeroedx_8: bool;
  V758_zeroedx_9: bool;
  V759_zeroedx_10: bool;
  V760_zeroedx_11: bool;
  V761_zeroedx_12: bool;
  V762_zeroedx_13: bool;
  V763_zeroedx_14: bool;
  V764_zeroedx_15: bool;
  V765_negx_0: bool;
  V766_negx_1: bool;
  V767_negx_2: bool;
  V768_negx_3: bool;
  V769_negx_4: bool;
  V770_negx_5: bool;
  V771_negx_6: bool;
  V772_negx_7: bool;
  V773_negx_8: bool;
  V774_negx_9: bool;
  V775_negx_10: bool;
  V776_negx_11: bool;
  V777_negx_12: bool;
  V778_negx_13: bool;
  V779_negx_14: bool;
  V780_negx_15: bool;
  V781_zeroedy_0: bool;
  V782_zeroedy_1: bool;
  V783_zeroedy_2: bool;
  V784_zeroedy_3: bool;
  V785_zeroedy_4: bool;
  V786_zeroedy_5: bool;
  V787_zeroedy_6: bool;
  V788_zeroedy_7: bool;
  V789_zeroedy_8: bool;
  V790_zeroedy_9: bool;
  V791_zeroedy_10: bool;
  V792_zeroedy_11: bool;
  V793_zeroedy_12: bool;
  V794_zeroedy_13: bool;
  V795_zeroedy_14: bool;
  V796_zeroedy_15: bool;
  V797_negy_0: bool;
  V798_negy_1: bool;
  V799_negy_2: bool;
  V800_negy_3: bool;
  V801_negy_4: bool;
  V802_negy_5: bool;
  V803_negy_6: bool;
  V804_negy_7: bool;
  V805_negy_8: bool;
  V806_negy_9: bool;
  V807_negy_10: bool;
  V808_negy_11: bool;
  V809_negy_12: bool;
  V810_negy_13: bool;
  V811_negy_14: bool;
  V812_negy_15: bool;
  V813_outbis_0: bool;
  V814_outbis_1: bool;
  V815_outbis_2: bool;
  V816_outbis_3: bool;
  V817_outbis_4: bool;
  V818_outbis_5: bool;
  V819_outbis_6: bool;
  V820_outbis_7: bool;
  V821_outbis_8: bool;
  V822_outbis_9: bool;
  V823_outbis_10: bool;
  V824_outbis_11: bool;
  V825_outbis_12: bool;
  V826_outbis_13: bool;
  V827_outbis_14: bool;
  V828_outbis_15: bool;
  V3384_c1: bool;
  V3385_s1: bool;
  V3386_c1: bool;
  V3387_c2: bool;
  V3388_c1: bool;
  V3389_s1: bool;
  V3390_c1: bool;
  V3391_c2: bool;
  V3392_c1: bool;
  V3393_s1: bool;
  V3394_c1: bool;
  V3395_c2: bool;
  V3396_c1: bool;
  V3397_s1: bool;
  V3398_c1: bool;
  V3399_c2: bool;
  V3400_c1: bool;
  V3401_s1: bool;
  V3402_c1: bool;
  V3403_c2: bool;
  V3404_c1: bool;
  V3405_s1: bool;
  V3406_c1: bool;
  V3407_c2: bool;
  V3408_c1: bool;
  V3409_s1: bool;
  V3410_c1: bool;
  V3411_c2: bool;
  V3412_c1: bool;
  V3413_s1: bool;
  V3414_c1: bool;
  V3415_c2: bool;
  V3416_c1: bool;
  V3417_s1: bool;
  V3418_c1: bool;
  V3419_c2: bool;
  V3420_c1: bool;
  V3421_s1: bool;
  V3422_c1: bool;
  V3423_c2: bool;
  V3424_c1: bool;
  V3425_s1: bool;
  V3426_c1: bool;
  V3427_c2: bool;
  V3428_c1: bool;
  V3429_s1: bool;
  V3430_c1: bool;
  V3431_c2: bool;
  V3432_c1: bool;
  V3433_s1: bool;
  V3434_c1: bool;
  V3435_c2: bool;
  V3436_c1: bool;
  V3437_s1: bool;
  V3438_c1: bool;
  V3439_c2: bool;
  V3440_c1: bool;
  V3441_s1: bool;
  V3442_c1: bool;
  V3443_c2: bool;
  V3444_c1: bool;
  V3445_s1: bool;
  V3446_c1: bool;
  V3447_c2: bool;

let
  assert true;
  assert true;
  assert true;
  assert true;
  assert true;
  assert true;
  assert true;
  assert true;
  assert true;
  assert true;
  assert true;
  assert true;
  assert true;
  assert true;
  assert true;
  assert true;
  assert true;
  assert true;
  assert true;
  assert true;
  assert true;
  assert true;
  assert true;
  assert true;
  assert true;
  assert true;
  assert true;
  assert true;
  assert true;
  assert true;
  assert true;
  assert true;
  assert true;
  assert true;
  assert true;
  assert true;
  assert true;
  assert true;
  assert true;
  assert true;
  assert true;
  assert true;
  assert true;
  assert true;
  assert true;
  assert true;
  assert true;
  out_0 = ng;
  out_1 = (if no then (not V814_outbis_1) else V814_outbis_1);
  out_2 = (if no then (not V815_outbis_2) else V815_outbis_2);
  out_3 = (if no then (not V816_outbis_3) else V816_outbis_3);
  out_4 = (if no then (not V817_outbis_4) else V817_outbis_4);
  out_5 = (if no then (not V818_outbis_5) else V818_outbis_5);
  out_6 = (if no then (not V819_outbis_6) else V819_outbis_6);
  out_7 = (if no then (not V820_outbis_7) else V820_outbis_7);
  out_8 = (if no then (not V821_outbis_8) else V821_outbis_8);
  out_9 = (if no then (not V822_outbis_9) else V822_outbis_9);
  out_10 = (if no then (not V823_outbis_10) else V823_outbis_10);
  out_11 = (if no then (not V824_outbis_11) else V824_outbis_11);
  out_12 = (if no then (not V825_outbis_12) else V825_outbis_12);
  out_13 = (if no then (not V826_outbis_13) else V826_outbis_13);
  out_14 = (if no then (not V827_outbis_14) else V827_outbis_14);
  out_15 = (if no then (not V828_outbis_15) else V828_outbis_15);
  zr = (not ((((ng or out_1) or (out_2 or out_3)) or ((out_4 or out_5) or (
  out_6 or out_7))) or (((out_8 or out_9) or (out_10 or out_11)) or ((out_12 or 
  out_13) or (out_14 or out_15)))));
  ng = (if no then (not V813_outbis_0) else V813_outbis_0);
  V749_zeroedx_0 = (if zx then false else in_x_0);
  V750_zeroedx_1 = (if zx then false else in_x_1);
  V751_zeroedx_2 = (if zx then false else in_x_2);
  V752_zeroedx_3 = (if zx then false else in_x_3);
  V753_zeroedx_4 = (if zx then false else in_x_4);
  V754_zeroedx_5 = (if zx then false else in_x_5);
  V755_zeroedx_6 = (if zx then false else in_x_6);
  V756_zeroedx_7 = (if zx then false else in_x_7);
  V757_zeroedx_8 = (if zx then false else in_x_8);
  V758_zeroedx_9 = (if zx then false else in_x_9);
  V759_zeroedx_10 = (if zx then false else in_x_10);
  V760_zeroedx_11 = (if zx then false else in_x_11);
  V761_zeroedx_12 = (if zx then false else in_x_12);
  V762_zeroedx_13 = (if zx then false else in_x_13);
  V763_zeroedx_14 = (if zx then false else in_x_14);
  V764_zeroedx_15 = (if zx then false else in_x_15);
  V765_negx_0 = (if nx then (not in_x_0) else V749_zeroedx_0);
  V766_negx_1 = (if nx then (not in_x_1) else V750_zeroedx_1);
  V767_negx_2 = (if nx then (not in_x_2) else V751_zeroedx_2);
  V768_negx_3 = (if nx then (not in_x_3) else V752_zeroedx_3);
  V769_negx_4 = (if nx then (not in_x_4) else V753_zeroedx_4);
  V770_negx_5 = (if nx then (not in_x_5) else V754_zeroedx_5);
  V771_negx_6 = (if nx then (not in_x_6) else V755_zeroedx_6);
  V772_negx_7 = (if nx then (not in_x_7) else V756_zeroedx_7);
  V773_negx_8 = (if nx then (not in_x_8) else V757_zeroedx_8);
  V774_negx_9 = (if nx then (not in_x_9) else V758_zeroedx_9);
  V775_negx_10 = (if nx then (not in_x_10) else V759_zeroedx_10);
  V776_negx_11 = (if nx then (not in_x_11) else V760_zeroedx_11);
  V777_negx_12 = (if nx then (not in_x_12) else V761_zeroedx_12);
  V778_negx_13 = (if nx then (not in_x_13) else V762_zeroedx_13);
  V779_negx_14 = (if nx then (not in_x_14) else V763_zeroedx_14);
  V780_negx_15 = (if nx then (not in_x_15) else V764_zeroedx_15);
  V781_zeroedy_0 = (if zy then false else in_y_0);
  V782_zeroedy_1 = (if zy then false else in_y_1);
  V783_zeroedy_2 = (if zy then false else in_y_2);
  V784_zeroedy_3 = (if zy then false else in_y_3);
  V785_zeroedy_4 = (if zy then false else in_y_4);
  V786_zeroedy_5 = (if zy then false else in_y_5);
  V787_zeroedy_6 = (if zy then false else in_y_6);
  V788_zeroedy_7 = (if zy then false else in_y_7);
  V789_zeroedy_8 = (if zy then false else in_y_8);
  V790_zeroedy_9 = (if zy then false else in_y_9);
  V791_zeroedy_10 = (if zy then false else in_y_10);
  V792_zeroedy_11 = (if zy then false else in_y_11);
  V793_zeroedy_12 = (if zy then false else in_y_12);
  V794_zeroedy_13 = (if zy then false else in_y_13);
  V795_zeroedy_14 = (if zy then false else in_y_14);
  V796_zeroedy_15 = (if zy then false else in_y_15);
  V797_negy_0 = (if ny then (not in_y_0) else V781_zeroedy_0);
  V798_negy_1 = (if ny then (not in_y_1) else V782_zeroedy_1);
  V799_negy_2 = (if ny then (not in_y_2) else V783_zeroedy_2);
  V800_negy_3 = (if ny then (not in_y_3) else V784_zeroedy_3);
  V801_negy_4 = (if ny then (not in_y_4) else V785_zeroedy_4);
  V802_negy_5 = (if ny then (not in_y_5) else V786_zeroedy_5);
  V803_negy_6 = (if ny then (not in_y_6) else V787_zeroedy_6);
  V804_negy_7 = (if ny then (not in_y_7) else V788_zeroedy_7);
  V805_negy_8 = (if ny then (not in_y_8) else V789_zeroedy_8);
  V806_negy_9 = (if ny then (not in_y_9) else V790_zeroedy_9);
  V807_negy_10 = (if ny then (not in_y_10) else V791_zeroedy_10);
  V808_negy_11 = (if ny then (not in_y_11) else V792_zeroedy_11);
  V809_negy_12 = (if ny then (not in_y_12) else V793_zeroedy_12);
  V810_negy_13 = (if ny then (not in_y_13) else V794_zeroedy_13);
  V811_negy_14 = (if ny then (not in_y_14) else V795_zeroedy_14);
  V812_negy_15 = (if ny then (not in_y_15) else V796_zeroedy_15);
  V813_outbis_0 = (if f then (V3440_c1 xor V3445_s1) else (V765_negx_0 and 
  V797_negy_0));
  V814_outbis_1 = (if f then (V3436_c1 xor V3441_s1) else (V766_negx_1 and 
  V798_negy_1));
  V815_outbis_2 = (if f then (V3432_c1 xor V3437_s1) else (V767_negx_2 and 
  V799_negy_2));
  V816_outbis_3 = (if f then (V3428_c1 xor V3433_s1) else (V768_negx_3 and 
  V800_negy_3));
  V817_outbis_4 = (if f then (V3424_c1 xor V3429_s1) else (V769_negx_4 and 
  V801_negy_4));
  V818_outbis_5 = (if f then (V3420_c1 xor V3425_s1) else (V770_negx_5 and 
  V802_negy_5));
  V819_outbis_6 = (if f then (V3416_c1 xor V3421_s1) else (V771_negx_6 and 
  V803_negy_6));
  V820_outbis_7 = (if f then (V3412_c1 xor V3417_s1) else (V772_negx_7 and 
  V804_negy_7));
  V821_outbis_8 = (if f then (V3408_c1 xor V3413_s1) else (V773_negx_8 and 
  V805_negy_8));
  V822_outbis_9 = (if f then (V3404_c1 xor V3409_s1) else (V774_negx_9 and 
  V806_negy_9));
  V823_outbis_10 = (if f then (V3400_c1 xor V3405_s1) else (V775_negx_10 and 
  V807_negy_10));
  V824_outbis_11 = (if f then (V3396_c1 xor V3401_s1) else (V776_negx_11 and 
  V808_negy_11));
  V825_outbis_12 = (if f then (V3392_c1 xor V3397_s1) else (V777_negx_12 and 
  V809_negy_12));
  V826_outbis_13 = (if f then (V3388_c1 xor V3393_s1) else (V778_negx_13 and 
  V810_negy_13));
  V827_outbis_14 = (if f then (V3384_c1 xor V3389_s1) else (V779_negx_14 and 
  V811_negy_14));
  V828_outbis_15 = (if f then (false xor V3385_s1) else (V780_negx_15 and 
  V812_negy_15));
  V3384_c1 = (V3386_c1 or V3387_c2);
  V3385_s1 = (V780_negx_15 xor V812_negy_15);
  V3386_c1 = (V780_negx_15 and V812_negy_15);
  V3387_c2 = (false and V3385_s1);
  V3388_c1 = (V3390_c1 or V3391_c2);
  V3389_s1 = (V779_negx_14 xor V811_negy_14);
  V3390_c1 = (V779_negx_14 and V811_negy_14);
  V3391_c2 = (V3384_c1 and V3389_s1);
  V3392_c1 = (V3394_c1 or V3395_c2);
  V3393_s1 = (V778_negx_13 xor V810_negy_13);
  V3394_c1 = (V778_negx_13 and V810_negy_13);
  V3395_c2 = (V3388_c1 and V3393_s1);
  V3396_c1 = (V3398_c1 or V3399_c2);
  V3397_s1 = (V777_negx_12 xor V809_negy_12);
  V3398_c1 = (V777_negx_12 and V809_negy_12);
  V3399_c2 = (V3392_c1 and V3397_s1);
  V3400_c1 = (V3402_c1 or V3403_c2);
  V3401_s1 = (V776_negx_11 xor V808_negy_11);
  V3402_c1 = (V776_negx_11 and V808_negy_11);
  V3403_c2 = (V3396_c1 and V3401_s1);
  V3404_c1 = (V3406_c1 or V3407_c2);
  V3405_s1 = (V775_negx_10 xor V807_negy_10);
  V3406_c1 = (V775_negx_10 and V807_negy_10);
  V3407_c2 = (V3400_c1 and V3405_s1);
  V3408_c1 = (V3410_c1 or V3411_c2);
  V3409_s1 = (V774_negx_9 xor V806_negy_9);
  V3410_c1 = (V774_negx_9 and V806_negy_9);
  V3411_c2 = (V3404_c1 and V3409_s1);
  V3412_c1 = (V3414_c1 or V3415_c2);
  V3413_s1 = (V773_negx_8 xor V805_negy_8);
  V3414_c1 = (V773_negx_8 and V805_negy_8);
  V3415_c2 = (V3408_c1 and V3413_s1);
  V3416_c1 = (V3418_c1 or V3419_c2);
  V3417_s1 = (V772_negx_7 xor V804_negy_7);
  V3418_c1 = (V772_negx_7 and V804_negy_7);
  V3419_c2 = (V3412_c1 and V3417_s1);
  V3420_c1 = (V3422_c1 or V3423_c2);
  V3421_s1 = (V771_negx_6 xor V803_negy_6);
  V3422_c1 = (V771_negx_6 and V803_negy_6);
  V3423_c2 = (V3416_c1 and V3421_s1);
  V3424_c1 = (V3426_c1 or V3427_c2);
  V3425_s1 = (V770_negx_5 xor V802_negy_5);
  V3426_c1 = (V770_negx_5 and V802_negy_5);
  V3427_c2 = (V3420_c1 and V3425_s1);
  V3428_c1 = (V3430_c1 or V3431_c2);
  V3429_s1 = (V769_negx_4 xor V801_negy_4);
  V3430_c1 = (V769_negx_4 and V801_negy_4);
  V3431_c2 = (V3424_c1 and V3429_s1);
  V3432_c1 = (V3434_c1 or V3435_c2);
  V3433_s1 = (V768_negx_3 xor V800_negy_3);
  V3434_c1 = (V768_negx_3 and V800_negy_3);
  V3435_c2 = (V3428_c1 and V3433_s1);
  V3436_c1 = (V3438_c1 or V3439_c2);
  V3437_s1 = (V767_negx_2 xor V799_negy_2);
  V3438_c1 = (V767_negx_2 and V799_negy_2);
  V3439_c2 = (V3432_c1 and V3437_s1);
  V3440_c1 = (V3442_c1 or V3443_c2);
  V3441_s1 = (V766_negx_1 xor V798_negy_1);
  V3442_c1 = (V766_negx_1 and V798_negy_1);
  V3443_c2 = (V3436_c1 and V3441_s1);
  V3444_c1 = (V3446_c1 or V3447_c2);
  V3445_s1 = (V765_negx_0 xor V797_negy_0);
  V3446_c1 = (V765_negx_0 and V797_negy_0);
  V3447_c2 = (V3440_c1 and V3445_s1);
tel

